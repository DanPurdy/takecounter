version: 2.1

slack-fail-post-step: &slack-post-steps
  post-steps:
    - slack/notify:
        custom: |
          {
            "text": "",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "❌ *Failure* ${CIRCLE_STAGE} for #${CIRCLE_BUILD_NUM} on `${CIRCLE_BRANCH}`"
                }
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View Job"
                    },
                    "url": "${CIRCLE_BUILD_URL}"
                  }
                ]
              }
            ]
          }
        event: fail
    - slack/notify:
        custom: |
          {
            "text": "",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "✅ *Success* ${CIRCLE_STAGE} for #${CIRCLE_BUILD_NUM} on `${CIRCLE_BRANCH}`"
                }
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View Job"
                    },
                    "url": "${CIRCLE_BUILD_URL}"
                  }
                ]
              }
            ]
          }
        event: pass

orbs:
  node: circleci/node@3.0.0
  slack: circleci/slack@4.1.1
jobs:
  prepare-dependencies:
    working_directory: ~/takecounter
    docker:
      - image: node:current
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: |
            npm ci
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - store_artifacts:
          path: package-lock.json
      - persist_to_workspace:
          root: .
          paths:
            - .
  unit-tests:
    working_directory: ~/takecounter
    docker:
      - image: node:current
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Unit tests
          command: npm run test
          when: always
      - run:
          name: Save output
          command: |
            mkdir /tmp/test-results
            cp junit.xml /tmp/test-results/junit.xml
          when: always
      - store_artifacts:
          path: coverage
      - store_test_results:
          path: /tmp/test-results
      - slack/notify:
          event: fail
          template: basic_fail_1
  e2e-tests:
    environment:
      E2E_HOST: 'http://localhost:1234'
      E2E_HEADLESS: 'true'
    working_directory: ~/takecounter
    docker:
      - image: circleci/node:12.19-browsers
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Start dev server
          command: npm run dev
          background: true
      - run:
          name: E2E tests
          command: npm run test:e2e
      - run:
          name: Save artifacts
          command: |
            mkdir /tmp/test-results
            cp e2e/result.xml /tmp/test-results/result.xml
            mv e2e/screenshots/ /tmp/test-results/
          when: always
      - store_artifacts:
          path: /tmp/test-results
      - store_test_results:
          path: /tmp/test-results
  build-release-artifacts:
    working_directory: ~/takecounter
    docker:
      - image: node:current
    steps:
      - attach_workspace:
          at: .
      - run: |
          apt-get update && apt-get install -y zip unzip
          mkdir /tmp/artifacts
      - run:
          name: Build server
          command: npm run build
      - run: |
          cd dist
          zip -r ${CIRCLE_PROJECT_REPONAME}-server.zip . -x "*.git*"
          mv ${CIRCLE_PROJECT_REPONAME}-server.zip /tmp/artifacts
      - run:
          name: Build Local
          command: npm run build-download
      - run: |
          cd dist
          zip -r ${CIRCLE_PROJECT_REPONAME}-local.zip . -x "*.git*"
          mv ${CIRCLE_PROJECT_REPONAME}-local.zip /tmp/artifacts
      - store_artifacts:
          path: /tmp/artifacts
      - persist_to_workspace:
          root: /tmp/artifacts/
          paths:
            - .
  create-release:
    working_directory: ~/takecounter
    docker:
      - image: cibuilds/github:latest
    steps:
      - attach_workspace:
          at: /tmp/artifacts
      - run:
          name: Publish Github Release
          command: |
            mkdir /tmp/artifacts/output
            mv /tmp/artifacts/${CIRCLE_PROJECT_REPONAME}-local.zip /tmp/artifacts/output
            mv /tmp/artifacts/${CIRCLE_PROJECT_REPONAME}-server.zip /tmp/artifacts/output
            VERSION=${CIRCLE_TAG}
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -n ${VERSION} -delete ${VERSION} /tmp/artifacts/output

workflows:
  tests:
    jobs:
      - prepare-dependencies:
          filters:
            branches:
              only: /.*/
            tags:
              ignore: /^\d+\.\d+\.\d+$/
      - e2e-tests:
          context:
            - slack-secrets
          requires:
            - prepare-dependencies
          <<: *slack-post-steps
      - unit-tests:
          context:
            - slack-secrets
          requires:
            - prepare-dependencies
          <<: *slack-post-steps
  prepare-release:
    jobs:
      - prepare-dependencies:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
      - build-release-artifacts:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
          context:
            - slack-secrets
          requires:
            - prepare-dependencies
      - create-release:
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^\d+\.\d+\.\d+$/
          context:
            - slack-secrets
            - github-secrets
          requires:
            - build-release-artifacts
          <<: *slack-post-steps
